/**
 * UI –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */

class AIManagerUI {
    constructor(app) {
        this.app = app;
        this.manager = null;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        if (typeof getAIManager !== 'undefined') {
            try {
                this.manager = getAIManager();
                console.log('‚úÖ –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Telegram ID –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
                if (window.Telegram && window.Telegram.WebApp) {
                    const initData = window.Telegram.WebApp.initDataUnsafe;
                    if (initData && initData.user && initData.user.id) {
                        this.manager.setTelegramId(initData.user.id);
                        console.log('‚úÖ Telegram ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', initData.user.id);
                    }
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞:', error);
                this.manager = null;
            }
        } else {
            console.error('‚ùå getAIManager –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ai_manager_frontend.js');
        }
    }
    
    /**
     * –†–µ–Ω–¥–µ—Ä–∏—Ç —ç–∫—Ä–∞–Ω –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    renderAIManagerScreen() {
        const appContainer = document.getElementById('app-container');
        if (!appContainer) return;
        
        appContainer.innerHTML = `
            <div class="ai-manager-screen">
                <div class="ai-manager-header">
                    <h2>ü§ñ –ò–ò-–ú–µ–Ω–µ–¥–∂–µ—Ä</h2>
                    <p class="ai-manager-subtitle">–í–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π</p>
                </div>
                
                <div class="ai-manager-content">
                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
                    <div class="ai-quick-actions">
                        <button class="ai-action-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.testBreakGoal(); }">
                            <span class="ai-btn-icon">üéØ</span>
                            <span class="ai-btn-text">–†–∞–∑–±–∏—Ç—å —Ü–µ–ª—å –Ω–∞ —ç—Ç–∞–ø—ã</span>
                        </button>
                        
                        <button class="ai-action-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.testNavigation(); }">
                            <span class="ai-btn-icon">üß≠</span>
                            <span class="ai-btn-text">–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?</span>
                        </button>
                        
                        <button class="ai-action-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.testAdvice(); }">
                            <span class="ai-btn-icon">üí°</span>
                            <span class="ai-btn-text">–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç</span>
                        </button>
                        
                        <button class="ai-action-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.testAnalyzeProgress(); }">
                            <span class="ai-btn-icon">üìä</span>
                            <span class="ai-btn-text">–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</span>
                        </button>
                        
                        <button class="ai-action-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.testMotivation(); }">
                            <span class="ai-btn-icon">üí™</span>
                            <span class="ai-btn-text">–ú–æ—Ç–∏–≤–∞—Ü–∏—è</span>
                        </button>
                    </div>
                    
                    <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã -->
                    <div id="ai-manager-result" class="ai-manager-result"></div>
                    
                    <!-- –ß–∞—Ç —Å –ò–ò -->
                    <div class="ai-chat-section">
                        <h3>üí¨ –ß–∞—Ç —Å –ò–ò-—Å–æ–≤–µ—Ç–Ω–∏–∫–æ–º</h3>
                        <div id="ai-chat-messages" class="ai-chat-messages">
                            <div class="ai-chat-message ai" style="padding: 12px; background: #e2e8f0; border-radius: 10px; margin-bottom: 15px;">
                                üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ–º–æ–≥—É —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Ü–µ–ª–µ–π!
                            </div>
                        </div>
                        <div class="ai-chat-input-container">
                            <input 
                                type="text" 
                                id="ai-chat-input" 
                                class="ai-chat-input" 
                                placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å..."
                                onkeypress="if(event.key === 'Enter' && window.aiManagerUI) { window.aiManagerUI.askQuestion(); }"
                            >
                            <button class="ai-chat-send-btn" onclick="if(window.aiManagerUI) { window.aiManagerUI.askQuestion(); } else { alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.'); }">
                                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        this.injectStyles();
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        setTimeout(() => {
            this.bindChatEvents();
        }, 100);
    }
    
    /**
     * –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è —á–∞—Ç–∞
     */
    bindChatEvents() {
        const input = document.getElementById('ai-chat-input');
        const sendBtn = document.querySelector('.ai-chat-send-btn');
        
        if (input) {
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter
            input.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    this.askQuestion();
                }
            });
        }
        
        if (sendBtn) {
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            sendBtn.addEventListener('click', () => {
                this.askQuestion();
            });
        }
        
        console.log('‚úÖ –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞ –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    }
    
    /**
     * –ò–Ω–∂–µ–∫—Ç–∏—Ç —Å—Ç–∏–ª–∏ –¥–ª—è –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞
     */
    injectStyles() {
        if (document.getElementById('ai-manager-styles')) return;
        
        const style = document.createElement('style');
        style.id = 'ai-manager-styles';
        style.textContent = `
            .ai-manager-screen {
                padding: 20px;
                padding-bottom: 85px;
                max-width: 600px;
                margin: 0 auto;
            }
            
            .ai-manager-header {
                text-align: center;
                margin-bottom: 30px;
            }
            
            .ai-manager-header h2 {
                margin: 0 0 10px 0;
                color: #6366f1;
            }
            
            .ai-manager-subtitle {
                color: #64748b;
                margin: 0;
            }
            
            .ai-quick-actions {
                display: grid;
                gap: 15px;
                margin-bottom: 30px;
            }
            
            .ai-action-btn {
                display: flex;
                align-items: center;
                gap: 15px;
                padding: 20px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                border: none;
                border-radius: 15px;
                color: white;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: transform 0.2s, box-shadow 0.2s;
                box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
            }
            
            .ai-action-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
            }
            
            .ai-action-btn:active {
                transform: translateY(0);
            }
            
            .ai-btn-icon {
                font-size: 24px;
            }
            
            .ai-btn-text {
                flex: 1;
                text-align: left;
            }
            
            .ai-manager-result {
                background: #f8fafc;
                border: 2px solid #e2e8f0;
                border-radius: 15px;
                padding: 20px;
                margin-bottom: 30px;
                min-height: 50px;
                display: none;
            }
            
            .ai-manager-result.show {
                display: block;
            }
            
            .ai-result-title {
                font-size: 18px;
                font-weight: 600;
                margin-bottom: 15px;
                color: #1e293b;
            }
            
            .ai-result-content {
                color: #475569;
                line-height: 1.6;
            }
            
            .ai-result-steps {
                margin-top: 15px;
            }
            
            .ai-result-step {
                padding: 10px;
                margin-bottom: 10px;
                background: white;
                border-left: 4px solid #6366f1;
                border-radius: 5px;
            }
            
            .ai-result-step strong {
                color: #1e293b;
            }
            
            .ai-chat-section {
                background: #f8fafc;
                border-radius: 15px;
                padding: 20px;
                margin-bottom: 20px;
            }
            
            .ai-chat-section h3 {
                margin: 0 0 15px 0;
                color: #1e293b;
            }
            
            .ai-chat-messages {
                max-height: 300px;
                overflow-y: auto;
                margin-bottom: 15px;
                padding: 15px;
                background: white;
                border-radius: 10px;
                min-height: 100px;
            }
            
            .ai-chat-message {
                margin-bottom: 15px;
                padding: 12px;
                border-radius: 10px;
            }
            
            .ai-chat-message.user {
                background: #6366f1;
                color: white;
                text-align: right;
            }
            
            .ai-chat-message.ai {
                background: #e2e8f0;
                color: #1e293b;
            }
            
            .ai-chat-input-container {
                display: flex;
                gap: 10px;
                margin-bottom: 10px;
                position: relative;
                z-index: 10;
            }
            
            .ai-chat-input {
                flex: 1;
                padding: 12px;
                border: 2px solid #e2e8f0;
                border-radius: 10px;
                font-size: 14px;
            }
            
            .ai-chat-input:focus {
                outline: none;
                border-color: #6366f1;
            }
            
            .ai-chat-send-btn {
                padding: 12px 20px;
                background: #6366f1;
                color: white;
                border: none;
                border-radius: 10px;
                font-weight: 600;
                cursor: pointer;
            }
            
            .ai-chat-send-btn:hover {
                background: #4f46e5;
            }
            
            .loading {
                color: #64748b;
                font-style: italic;
            }
        `;
        document.head.appendChild(style);
    }
    
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
     */
    showResult(title, content) {
        const resultDiv = document.getElementById('ai-manager-result');
        if (!resultDiv) return;
        
        resultDiv.innerHTML = `
            <div class="ai-result-title">${title}</div>
            <div class="ai-result-content">${content}</div>
        `;
        resultDiv.classList.add('show');
        resultDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }
    
    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
     */
    addChatMessage(sender, text) {
        const messagesDiv = document.getElementById('ai-chat-messages');
        if (!messagesDiv) return;
        
        const messageDiv = document.createElement('div');
        messageDiv.className = `ai-chat-message ${sender}`;
        messageDiv.textContent = text;
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
        
        return messageDiv;
    }
    
    /**
     * –¢–µ—Å—Ç: –†–∞–∑–±–∏—Ç—å —Ü–µ–ª—å –Ω–∞ —ç—Ç–∞–ø—ã
     */
    async testBreakGoal() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
            return;
        }
        
        const title = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏:');
        if (!title) return;
        
        const description = prompt('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º):') || '';
        
        this.showResult('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...', '–†–∞–∑–±–∏–≤–∞—é —Ü–µ–ª—å –Ω–∞ —ç—Ç–∞–ø—ã...');
        
        try {
            const result = await this.manager.breakGoalIntoSteps(title, description);
            
            if (result && result.success) {
                let html = '<div class="ai-result-steps">';
                if (result.steps && result.steps.length > 0) {
                    result.steps.forEach((step, index) => {
                        html += `
                            <div class="ai-result-step">
                                <strong>${index + 1}. ${step.title || '–≠—Ç–∞–ø ' + (index + 1)}</strong><br>
                                ${step.description || ''}<br>
                                <small>–î–Ω–µ–π: ${step.estimated_days || '–Ω/–¥'}, –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${step.priority || '–Ω/–¥'}/5</small>
                            </div>
                        `;
                    });
                } else {
                    html += '<p>–≠—Ç–∞–ø—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...</p>';
                }
                html += '</div>';
                
                if (result.advice) {
                    html += `<p><strong>üí° –°–æ–≤–µ—Ç:</strong> ${result.advice}</p>`;
                }
                
                this.showResult(`‚úÖ –¶–µ–ª—å "${title}" —Ä–∞–∑–±–∏—Ç–∞ –Ω–∞ ${result.total_steps || 0} —ç—Ç–∞–ø–æ–≤`, html);
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∏—Ç—å —Ü–µ–ª—å –Ω–∞ —ç—Ç–∞–ø—ã. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ü–µ–ª–∏:', error);
            let errorMsg = `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
            
            // –ï—Å–ª–∏ 404, –∑–Ω–∞—á–∏—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
            if (error.message && error.message.includes('404')) {
                errorMsg = '‚ö†Ô∏è –≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ fallback –≤–µ—Ä—Å–∏—é.';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –≤–µ—Ä—Å–∏—é
                this.showFallbackBreakGoal(title, description);
                return;
            }
            
            this.showResult('‚ùå –û—à–∏–±–∫–∞', errorMsg);
        }
    }
    
    /**
     * Fallback –≤–µ—Ä—Å–∏—è —Ä–∞–∑–±–∏–µ–Ω–∏—è —Ü–µ–ª–∏ (–±–µ–∑ API)
     */
    showFallbackBreakGoal(title, description) {
        const steps = [
            {
                title: `–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã "${title}"`,
                description: "–ù–∞–π—Ç–∏ —Ä–µ—Å—É—Ä—Å—ã –∏ –∏–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏",
                estimated_days: 7,
                priority: 3
            },
            {
                title: `–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π`,
                description: "–î–µ—Ç–∞–ª—å–Ω–æ —Ä–∞—Å–ø–∏—Å–∞—Ç—å —à–∞–≥–∏ –∏ —Å—Ä–æ–∫–∏",
                estimated_days: 3,
                priority: 4
            },
            {
                title: `–ù–∞—á–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é`,
                description: "–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —à–∞–≥–∞",
                estimated_days: 14,
                priority: 5
            },
            {
                title: `–û—Ü–µ–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å`,
                description: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω",
                estimated_days: 2,
                priority: 2
            }
        ];
        
        let html = '<div style="background: #fef3c7; padding: 10px; border-radius: 5px; margin-bottom: 15px;">';
        html += '<strong>‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è (API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)</strong></div>';
        html += '<div class="ai-result-steps">';
        steps.forEach((step, index) => {
            html += `
                <div class="ai-result-step">
                    <strong>${index + 1}. ${step.title}</strong><br>
                    ${step.description}<br>
                    <small>–î–Ω–µ–π: ${step.estimated_days}, –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${step.priority}/5</small>
                </div>
            `;
        });
        html += '</div>';
        html += `<p><strong>üí° –°–æ–≤–µ—Ç:</strong> –†–∞–∑–±–µ–π –±–æ–ª—å—à—É—é —Ü–µ–ª—å "${title}" –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏–µ —à–∞–≥–∏. –ù–∞—á–Ω–∏ —Å –∏–∑—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤, –∑–∞—Ç–µ–º —Å–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω –∏ –ø—Ä–∏—Å—Ç—É–ø–∞–π –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ.</p>`;
        
        this.showResult(`‚úÖ –¶–µ–ª—å "${title}" —Ä–∞–∑–±–∏—Ç–∞ –Ω–∞ ${steps.length} —ç—Ç–∞–ø–æ–≤ (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)`, html);
    }
    
    /**
     * –¢–µ—Å—Ç: –ù–∞–≤–∏–≥–∞—Ü–∏—è
     */
    async testNavigation() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
            return;
        }
        
        if (!this.manager.telegramId) {
            alert('Telegram ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑: aiManagerUI.manager.setTelegramId(–≤–∞—à_id)');
            return;
        }
        
        this.showResult('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...', '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å...');
        
        try {
            const result = await this.manager.getNavigation();
            
            if (result && result.success) {
                let html = '';
                
                // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ü–µ–ª–µ–π - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if (result.no_goals) {
                    html += '<div style="background: #fff3cd; padding: 15px; border-radius: 8px; margin-bottom: 15px; border-left: 4px solid #ffc107;">';
                    html += '<p style="margin: 0; font-weight: bold; color: #856404;">‚ö†Ô∏è –£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç —Ü–µ–ª–µ–π!</p>';
                    html += '<p style="margin: 10px 0 0 0; color: #856404;">–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–µ–ª—å.</p>';
                    html += '</div>';
                }
                
                if (result.next_actions && result.next_actions.length > 0) {
                    html += '<div class="ai-result-steps"><strong>üéØ –°–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:</strong>';
                    result.next_actions.forEach((action, index) => {
                        html += `
                            <div class="ai-result-step">
                                <strong>${index + 1}. ${action.title}</strong><br>
                                ${action.description}<br>
                                <small>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${action.priority}/5</small>
                            </div>
                        `;
                    });
                    html += '</div>';
                }
                
                if (result.focus) {
                    html += `<p><strong>üéØ –§–æ–∫—É—Å:</strong> ${result.focus}</p>`;
                }
                
                if (result.warnings && result.warnings.length > 0) {
                    html += `<p><strong>‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:</strong><ul>`;
                    result.warnings.forEach(warning => {
                        html += `<li>${warning}</li>`;
                    });
                    html += `</ul></p>`;
                }
                
                const title = result.no_goals ? 'üß≠ –ù–∞—á–Ω–∏ —Å–≤–æ–π –ø—É—Ç—å' : 'üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏';
                this.showResult(title, html);
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
            if (error.message && error.message.includes('404')) {
                this.showResult('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 
                    '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º. ' +
                    '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ñ–∞–π–ª ai_personal_manager.py –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä.');
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
            }
        }
    }
    
    /**
     * –¢–µ—Å—Ç: –°–æ–≤–µ—Ç
     */
    async testAdvice() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
            return;
        }
        
        const question = prompt('–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:');
        if (!question) return;
        
        this.showResult('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...', '–î—É–º–∞—é –Ω–∞–¥ —Å–æ–≤–µ—Ç–æ–º...');
        
        try {
            const result = await this.manager.getAdvice(question);
            
            if (result && result.success) {
                let html = `<p><strong>üí° –°–æ–≤–µ—Ç:</strong> ${result.advice || '–ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.'}</p>`;
                
                if (result.steps && result.steps.length > 0) {
                    html += '<div class="ai-result-steps"><strong>üìã –®–∞–≥–∏:</strong>';
                    result.steps.forEach((step, index) => {
                        html += `<div class="ai-result-step">${index + 1}. ${step}</div>`;
                    });
                    html += '</div>';
                }
                
                if (result.motivation) {
                    html += `<p><em>üí™ ${result.motivation}</em></p>`;
                }
                
                this.showResult('üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç', html);
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞:', error);
            if (error.message && error.message.includes('404')) {
                this.showResult('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 
                    '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. ' +
                    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–∏–µ —Å–æ–≤–µ—Ç—ã: –ø–ª–∞–Ω–∏—Ä—É–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ, –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞—á–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –æ—Ç–º–µ—á–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å.');
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
            }
        }
    }
    
    /**
     * –¢–µ—Å—Ç: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
     */
    async testAnalyzeProgress() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
            return;
        }
        
        if (!this.manager.telegramId) {
            alert('Telegram ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ manager.setTelegramId()');
            return;
        }
        
        this.showResult('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...', '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å...');
        
        try {
            const result = await this.manager.analyzeProgress();
            
            if (result.success) {
                let html = '<div style="background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 15px;">';
                html += '<h3 style="margin: 0 0 10px 0; color: #333;">üìä –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</h3>';
                html += `<p style="margin: 5px 0;"><strong>–û—Ü–µ–Ω–∫–∞:</strong> <span style="font-size: 1.2em; color: #007bff;">${result.score}/100</span></p>`;
                html += `<p style="margin: 5px 0;"><strong>üî• –°–µ—Ä–∏—è –¥–Ω–µ–π:</strong> ${result.streak}</p>`;
                if (result.days_since_start !== undefined) {
                    html += `<p style="margin: 5px 0;"><strong>üìÖ –î–Ω–µ–π —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> ${result.days_since_start}</p>`;
                }
                if (result.total_actions !== undefined) {
                    html += `<p style="margin: 5px 0;"><strong>‚úÖ –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π:</strong> ${result.total_actions}</p>`;
                }
                if (result.avg_actions_per_week !== undefined) {
                    html += `<p style="margin: 5px 0;"><strong>üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> ${result.avg_actions_per_week} –¥–µ–π—Å—Ç–≤–∏–π/–Ω–µ–¥–µ–ª—é</p>`;
                }
                if (result.goal_completion_rate !== undefined) {
                    html += `<p style="margin: 5px 0;"><strong>üéØ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–π:</strong> ${result.goal_completion_rate}%</p>`;
                }
                html += '</div>';
                
                html += `<p><strong>‚úÖ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:</strong> ${result.strength}</p>`;
                html += `<p><strong>‚ö†Ô∏è –°–ª–∞–±—ã–µ –º–µ—Å—Ç–∞:</strong> ${result.weaknesses}</p>`;
                
                if (result.recommendations && result.recommendations.length > 0) {
                    html += '<div class="ai-result-steps"><strong>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong>';
                    result.recommendations.forEach((rec, index) => {
                        html += `<div class="ai-result-step">${index + 1}. ${rec}</div>`;
                    });
                    html += '</div>';
                }
                
                this.showResult('üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', html);
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error);
            if (error.message && error.message.includes('404')) {
                this.showResult('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', 
                    '–≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. ' +
                    '<p><strong>–õ–æ–∫–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞:</strong></p>' +
                    '<p>‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤—ã–ø–æ–ª–Ω—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</p>' +
                    '<p>‚Ä¢ –û—Ç–º–µ—á–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–≥—É–ª—è—Ä–Ω–æ</p>' +
                    '<p>‚Ä¢ –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –æ–¥–Ω–æ–π —Ü–µ–ª–∏ –∑–∞ —Ä–∞–∑</p>');
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
            }
        }
    }
    
    /**
     * –¢–µ—Å—Ç: –ú–æ—Ç–∏–≤–∞—Ü–∏—è
     */
    async testMotivation() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
            return;
        }
        
        this.showResult('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...', '–ì–µ–Ω–µ—Ä–∏—Ä—É—é –º–æ—Ç–∏–≤–∞—Ü–∏—é...');
        
        try {
            const result = await this.manager.getMotivation();
            
            if (result && result.success) {
                this.showResult('üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è', `<p>${result.message}</p>`);
            } else {
                // Fallback –º–æ—Ç–∏–≤–∞—Ü–∏—è
                this.showFallbackMotivation();
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏:', error);
            if (error.message && error.message.includes('404')) {
                this.showFallbackMotivation();
            } else {
                this.showResult('‚ùå –û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞: ${error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
            }
        }
    }
    
    /**
     * Fallback –º–æ—Ç–∏–≤–∞—Ü–∏—è
     */
    showFallbackMotivation() {
        const fallbackMessages = [
            "üöÄ –ö–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ –º–µ—á—Ç–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥, –¥–∞–∂–µ –µ—Å–ª–∏ —à–∞–≥–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ!",
            "üí™ –ü–æ–º–Ω–∏: —Å–∞–º—ã–µ –≤–µ–ª–∏–∫–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞. –¢—ã —É–∂–µ –≤ –ø—É—Ç–∏!",
            "üåü –°–ª–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–æ—Ä–æ—Ç—ã –Ω–∞ —Ç–≤–æ–µ–π –¥–æ—Ä–æ–≥–µ. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –¥–æ—Ä–æ–≥–∞.",
            "üî• –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–æ–≥–¥–∞ —Ç—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å ‚Äî —ç—Ç–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –≤ —Å–≤–æ—é –º–µ—á—Ç—É. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è!",
            "‚ú® –ú–µ—á—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é, –∫–æ–≥–¥–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø—Ä–∏–≤—ã—á–∫–æ–π. –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏!"
        ];
        const message = fallbackMessages[Math.floor(Math.random() * fallbackMessages.length)];
        this.showResult('üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è', `<p>${message}</p><p><small>‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è.</small></p>`);
    }
    
    /**
     * –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ
     */
    async askQuestion() {
        if (!this.manager) {
            alert('–ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
            return;
        }
        
        const input = document.getElementById('ai-chat-input');
        if (!input) {
            console.error('–ü–æ–ª–µ –≤–≤–æ–¥–∞ —á–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        const question = input.value.trim();
        if (!question) {
            alert('–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å');
            return;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.addChatMessage('user', question);
        input.value = '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        const loadingMsg = this.addChatMessage('ai', '–î—É–º–∞—é...');
        
        try {
            const result = await this.manager.getAdvice(question);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –æ—Ç–≤–µ—Ç
            if (loadingMsg && result && result.success) {
                let responseText = result.advice || '–ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.';
                if (result.steps && result.steps.length > 0) {
                    responseText += '\n\nüìã –®–∞–≥–∏:\n' + result.steps.map((s, i) => `${i + 1}. ${s}`).join('\n');
                }
                if (result.motivation) {
                    responseText += `\n\nüí™ ${result.motivation}`;
                }
                loadingMsg.textContent = responseText;
            } else {
                // Fallback –æ—Ç–≤–µ—Ç
                loadingMsg.textContent = this.getFallbackAdvice(question);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞:', error);
            if (loadingMsg) {
                if (error.message && error.message.includes('404')) {
                    loadingMsg.textContent = this.getFallbackAdvice(question) + '\n\n‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è.';
                } else {
                    loadingMsg.textContent = this.getFallbackAdvice(question);
                }
            }
        }
    }
    
    /**
     * Fallback —Å–æ–≤–µ—Ç (–µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
     */
    getFallbackAdvice(question) {
        const fallbackAdvice = [
            "–ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏ –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —à–∞–≥–∞–º–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ —Å–∫–æ—Ä–æ—Å—Ç–∏.",
            "–ü–ª–∞–Ω–∏—Ä—É–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ, –≤—ã–¥–µ–ª—è–π –≤—Ä–µ–º—è –Ω–∞ –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏, –æ—Ç–º–µ—á–∞–π –ø—Ä–æ–≥—Ä–µ—Å—Å.",
            "–†–∞–∑–±–µ–π –±–æ–ª—å—à—É—é —Ü–µ–ª—å –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏. –í—ã–ø–æ–ª–Ω—è–π –∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º.",
            "–ü–æ–º–Ω–∏: –∫–∞–∂–¥–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ –±–æ–ª—å—à–æ–π –º–µ—á—Ç–µ. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è!"
        ];
        
        // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–æ–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–æ–ø—Ä–æ—Å–∞
        const questionLower = question.toLowerCase();
        if (questionLower.includes('–≤—Ä–µ–º—è') || questionLower.includes('–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å')) {
            return "–ü–ª–∞–Ω–∏—Ä—É–π —Å–≤–æ–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ:\n1. –°–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å –≤–µ—á–µ—Ä–∞\n2. –†–∞—Å—Å—Ç–∞–≤—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã\n3. –í—ã–¥–µ–ª–∏ –≤—Ä–µ–º—è –Ω–∞ –≤–∞–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏\n4. –í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞—á–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ";
        } else if (questionLower.includes('–º–æ—Ç–∏–≤–∞—Ü–∏—è') || questionLower.includes('–Ω–µ –º–æ–≥—É')) {
            return "–ö–∞–∂–¥—ã–π –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Ç—Ä—É–¥–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏. –ü–æ–º–Ω–∏: –∑–∞ –∫–∞–∂–¥—ã–º —Ö–æ–ª–º–æ–º –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –¥–æ—Ä–æ–≥–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥!";
        } else if (questionLower.includes('–Ω–∞—á–∞—Ç—å') || questionLower.includes('–∫–∞–∫ –Ω–∞—á–∞—Ç—å')) {
            return "–ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ:\n1. –û–ø—Ä–µ–¥–µ–ª–∏ –æ–¥–Ω—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ü–µ–ª—å\n2. –†–∞–∑–±–µ–π –µ—ë –Ω–∞ 3-5 —à–∞–≥–æ–≤\n3. –í—ã–ø–æ–ª–Ω–∏ –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å–µ–≥–æ–¥–Ω—è\n4. –ü—Ä–æ–¥–æ–ª–∂–∞–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ";
        }
        
        return fallbackAdvice[Math.floor(Math.random() * fallbackAdvice.length)];
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
let aiManagerUI = null;

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç UI –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
function initAIManagerUI(app) {
    if (!aiManagerUI) {
        try {
            aiManagerUI = new AIManagerUI(app);
            // –î–µ–ª–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ
            window.aiManagerUI = aiManagerUI;
            console.log('‚úÖ ai_manager_ui.js –∑–∞–≥—Ä—É–∂–µ–Ω, UI –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI –ò–ò-–º–µ–Ω–µ–¥–∂–µ—Ä–∞:', error);
            return null;
        }
    }
    return aiManagerUI;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
console.log('‚úÖ ai_manager_ui.js –∑–∞–≥—Ä—É–∂–µ–Ω');

