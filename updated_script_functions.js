// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è script.js
// –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —Ñ–∞–π–ª-—à–∞–±–ª–æ–Ω —Å —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞–º–∏ –∫–æ–¥–∞ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–ª–∞—Å—Å RoadToDreamApp
// –ù–ï –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –≤ index.html!
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∑–∞–º–µ–Ω—è—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã –≤ script.js

// ============================================
// –§–†–ê–ì–ú–ï–ù–¢–´ –ö–û–î–ê –î–õ–Ø –ö–õ–ê–°–°–ê RoadToDreamApp
// ============================================

/*
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è setupTelegramWebApp
setupTelegramWebApp() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp) {
        const tg = window.Telegram.WebApp;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        tg.ready();
        tg.expand();
        
        console.log('Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è —Å –Ω–æ–≤—ã–º API
        this.initializeUser();
    } else {
        console.log('Telegram WebApp –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        this.initializeTestUser();
    }
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async initializeUser() {
    try {
        // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è —á–µ—Ä–µ–∑ Telegram
        const user = await window.apiIntegration.authWithTelegram();
        
        if (user) {
            this.user = user;
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', user);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await this.loadUserData();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.showUserWelcome(user);
        } else {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
async initializeTestUser() {
    const testUser = {
        telegram_id: 123456789,
        first_name: "–¢–µ—Å—Ç",
        last_name: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        username: "test_user"
    };
    
    this.user = testUser;
    console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', testUser);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async loadUserData() {
    if (!this.user?.telegram_id) return;
    
    try {
        const userData = await window.apiIntegration.getUserData(this.user.telegram_id);
        
        if (userData) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            this.userData = userData;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—ã –≤ –º–æ–¥—É–ª—å –∫–∞—Ä—Ç—ã
            if (this.mapModule && userData.cards) {
                this.mapModule.loadCardsFromAPI(userData.cards);
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–ª–∏
            if (userData.goals) {
                this.loadGoalsFromAPI(userData.goals);
            }
            
            console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', userData);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    }
}

// –ü–æ–∫–∞–∑ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
showUserWelcome(user) {
    const welcomeMessage = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.first_name || user.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}!`;
    console.log('üëã', welcomeMessage);
    
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
    if (window.Telegram?.WebApp?.showAlert) {
        window.Telegram.WebApp.showAlert(welcomeMessage);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ª–∏ —á–µ—Ä–µ–∑ API
async createGoalAPI(goalData) {
    if (!this.user?.telegram_id) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return null;
    }
    
    const goal = {
        goal_type: goalData.type || 'general',
        description: goalData.description || goalData.title
    };
    
    try {
        const result = await window.apiIntegration.createGoals(this.user.telegram_id, [goal]);
        
        if (result) {
            console.log('üéØ –¶–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ API:', result);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º AI –º–æ—Ç–∏–≤–∞—Ü–∏—é
            await this.showAIMotivation('first_goal');
            
            return result;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–ª–∏:', error);
    }
    
    return null;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —á–µ—Ä–µ–∑ API
async createCardAPI(cardData) {
    if (!this.user?.telegram_id) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return null;
    }
    
    const card = {
        title: cardData.title,
        description: cardData.description,
        card_type: cardData.type || 'goal',
        priority: cardData.priority || 1,
        tags: cardData.tags || []
    };
    
    try {
        const result = await window.apiIntegration.createCards(this.user.telegram_id, [card]);
        
        if (result) {
            console.log('üÉè –ö–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ API:', result);
            return result;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã:', error);
    }
    
    return null;
}

// –û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
async completeActionAPI() {
    if (!this.user?.telegram_id) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return null;
    }
    
    try {
        const result = await window.apiIntegration.completeAction(this.user.telegram_id);
        
        if (result) {
            console.log('‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ —á–µ—Ä–µ–∑ API:', result);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º AI –º–æ—Ç–∏–≤–∞—Ü–∏—é
            await this.showAIMotivation('motivation_needed');
            
            return result;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è:', error);
    }
    
    return null;
}

// –ü–æ–∫–∞–∑ AI –º–æ—Ç–∏–≤–∞—Ü–∏–∏
async showAIMotivation(event) {
    try {
        const motivation = await window.apiIntegration.getAIMotivation(event);
        
        if (motivation?.message) {
            console.log('ü§ñ AI –º–æ—Ç–∏–≤–∞—Ü–∏—è:', motivation.message);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ—Ç–∏–≤–∞—Ü–∏—é –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            if (window.Telegram?.WebApp?.showAlert) {
                window.Telegram.WebApp.showAlert(motivation.message);
            } else {
                // –î–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
                alert(`ü§ñ ${motivation.message}`);
            }
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏:', error);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ü–µ–ª–µ–π –∏–∑ API
loadGoalsFromAPI(goals) {
    console.log('üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–ª–∏ –∏–∑ API:', goals);
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ —Ü–µ–ª—è–º–∏
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async init() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram WebApp
    this.setupTelegramWebApp();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
    this.initializeModules();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
    this.showScreen('map');
    
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
}
*/
