// –ú–æ–¥—É–ª—å –∫–∞—Ä–∞–≤–∞–Ω–∞ –¥–ª—è Telegram Mini App "Road to Your Dream"

console.log('caravan.js –∑–∞–≥—Ä—É–∂–µ–Ω');

class CaravanModule {
    constructor(mainApp) {
        console.log('CaravanModule constructor called');
        this.mainApp = mainApp;
        this.caravans = this.loadCaravans();
        this.caravanCreationData = null;
        this.currentEditingCaravan = null;
        this.currentManagingCaravan = null;
        this.currentSharingCaravan = null;
        this.currentShareUrl = null;
        this.caravanToDelete = null;
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —ç–∫—Ä–∞–Ω–∞ –∫–∞—Ä–∞–≤–∞–Ω–∞
    renderCaravanScreen() {
        console.log('renderCaravanScreen –≤—ã–∑–≤–∞–Ω–∞');
        const appContainer = document.getElementById('app-container');
        console.log('app-container –Ω–∞–π–¥–µ–Ω:', appContainer);
        appContainer.innerHTML = `
            <div class="caravan-screen">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —ç–∫—Ä–∞–Ω–∞ -->
                <div class="caravan-header">
                    <h2 class="caravan-title">üöê –ö–∞—Ä–∞–≤–∞–Ω</h2>
                    <p class="caravan-subtitle">–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ–±—â–µ–π —Ü–µ–ª–∏</p>
                </div>
                
                <!-- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç -->
                <div class="caravan-content">
                    <!-- –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ -->
                    <div class="create-caravan-section">
                        <div class="caravan-cta">
                            <div class="cta-icon">ü§ù</div>
                            <h3 class="cta-title">–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä–∞–≤–∞–Ω</h3>
                            <p class="cta-description">–û–±—ä–µ–¥–∏–Ω–∏—Ç–µ—Å—å —Å –¥—Ä—É–∑—å—è–º–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π</p>
                            <button class="create-caravan-button" id="create-caravan-btn">
                                <span class="plus-icon">+</span>
                                –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä–∞–≤–∞–Ω
                            </button>
                        </div>
                    </div>
                    
                    <!-- –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ä–∞–≤–∞–Ω–æ–≤ -->
                    <div class="existing-caravans">
                        <h4 class="caravans-title">–í–∞—à–∏ –∫–∞—Ä–∞–≤–∞–Ω—ã</h4>
                        <div class="caravans-list">
                            ${this.renderCaravansList()}
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∫–∞—Ä–∞–≤–∞–Ω–∞ -->
            ${this.renderCaravanModals()}
        `;
        
        this.setupCaravanEventListeners();
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∫–∞—Ä–∞–≤–∞–Ω–∞
    renderCaravanModals() {
        return `
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ - –®–∞–≥ 1: –ù–∞–∑–≤–∞–Ω–∏–µ -->
            <div id="create-caravan-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–®–∞–≥ 1: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeCreateCaravanModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <form id="create-caravan-step1-form" class="caravan-form">
                            <div class="form-group">
                                <label for="caravan-name" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã</label>
                                <input 
                                    type="text" 
                                    id="caravan-name" 
                                    class="form-input" 
                                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã"
                                    maxlength="50"
                                    required
                                >
                                <div class="form-hint">–ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤</div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.closeCreateCaravanModal()">
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                                <button type="submit" class="btn-primary">
                                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ - –®–∞–≥ 2: –¶–µ–ª—å -->
            <div id="create-caravan-step2-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–®–∞–≥ 2: –û–±—â–∞—è —Ü–µ–ª—å</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeCreateCaravanModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <form id="create-caravan-step2-form" class="caravan-form">
                            <div class="form-group">
                                <label for="caravan-goal" class="form-label">–û–±—â–∞—è —Ü–µ–ª—å</label>
                                <input 
                                    type="text" 
                                    id="caravan-goal" 
                                    class="form-input" 
                                    placeholder="–û–ø–∏—à–∏—Ç–µ –æ–±—â—É—é —Ü–µ–ª—å –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã"
                                    maxlength="100"
                                    required
                                >
                                <div class="form-hint">–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤</div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.goToStep1()">
                                    –ù–∞–∑–∞–¥
                                </button>
                                <button type="submit" class="btn-primary">
                                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ - –®–∞–≥ 3: –û–ø–∏—Å–∞–Ω–∏–µ -->
            <div id="create-caravan-step3-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–®–∞–≥ 3: –û–ø–∏—Å–∞–Ω–∏–µ</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeCreateCaravanModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <form id="create-caravan-step3-form" class="caravan-form">
                            <div class="form-group">
                                <label for="caravan-description" class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞</label>
                                <textarea 
                                    id="caravan-description" 
                                    class="form-textarea" 
                                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∞—à–∏—Ö –ø–ª–∞–Ω–∞—Ö..."
                                    maxlength="200"
                                    rows="4"
                                ></textarea>
                                <div class="form-hint">–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤</div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.goToStep2()">
                                    –ù–∞–∑–∞–¥
                                </button>
                                <button type="submit" class="btn-primary">
                                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è -->
            <div id="edit-description-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeEditDescriptionModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <form id="edit-description-form" class="caravan-form">
                            <div class="form-group">
                                <label for="edit-description-text" class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞</label>
                                <textarea 
                                    id="edit-description-text" 
                                    class="form-textarea" 
                                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∞—à–∏—Ö –ø–ª–∞–Ω–∞—Ö..."
                                    maxlength="200"
                                    rows="4"
                                ></textarea>
                                <div class="form-hint">–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤</div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.closeEditDescriptionModal()">
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                                <button type="submit" class="btn-primary">
                                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ -->
            <div id="manage-members-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeManageMembersModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <div class="members-section">
                            <div class="members-list" id="members-list">
                                <!-- –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                            </div>
                            
                            <div class="add-member-section">
                                <h4>–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞</h4>
                                <div class="form-group">
                                    <input 
                                        type="text" 
                                        id="member-username" 
                                        class="form-input" 
                                        placeholder="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID"
                                    >
                                    <button class="btn-primary" onclick="window.roadToDreamApp.caravanModule.addMember()">
                                        –î–æ–±–∞–≤–∏—Ç—å
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.closeManageMembersModal()">
                                –ó–∞–∫—Ä—ã—Ç—å
                            </button>
                            <button type="button" class="btn-primary" onclick="window.roadToDreamApp.caravanModule.finishCaravanCreation()" id="finish-caravan-btn" style="display: none;">
                                –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä–∞–≤–∞–Ω
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π -->
            <div id="share-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–∞—Ä–∞–≤–∞–Ω–æ–º</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeShareModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <div class="share-section">
                            <div class="share-info">
                                <h4 id="share-caravan-name">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞</h4>
                                <p class="share-description">–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É –∫–∞—Ä–∞–≤–∞–Ω—É.</p>
                            </div>
                            
                            <div class="share-link-container">
                                <input 
                                    type="text" 
                                    id="share-link-input" 
                                    class="form-input share-link-input" 
                                    readonly
                                    placeholder="–°—Å—ã–ª–∫–∞ –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞..."
                                >
                                <button class="btn-copy" onclick="window.roadToDreamApp.caravanModule.copyShareLink()">
                                    üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                                </button>
                            </div>
                            
                            <div class="share-actions">
                                <button class="btn-share-action" onclick="window.roadToDreamApp.caravanModule.shareToTelegram()">
                                    üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
                                </button>
                                <button class="btn-share-action" onclick="window.roadToDreamApp.caravanModule.shareToOther()">
                                    üåê –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                                </button>
                            </div>
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.closeShareModal()">
                                –ó–∞–∫—Ä—ã—Ç—å
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è -->
            <div id="delete-confirmation-modal" class="modal-overlay hidden">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω</h3>
                        <button class="modal-close" onclick="window.roadToDreamApp.caravanModule.closeDeleteConfirmationModal()">√ó</button>
                    </div>
                    <div class="modal-body">
                        <div class="delete-warning">
                            <div class="warning-icon">‚ö†Ô∏è</div>
                            <h4 id="delete-caravan-name">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞</h4>
                            <p class="warning-text">–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.</p>
                            <p class="confirmation-text">–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É:</p>
                            <div class="confirmation-phrase">
                                <strong>"–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω"</strong>
                            </div>
                        </div>
                        
                        <form id="delete-confirmation-form" class="caravan-form">
                            <div class="form-group">
                                <label for="delete-confirmation-input" class="form-label">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ:</label>
                                <input 
                                    type="text" 
                                    id="delete-confirmation-input" 
                                    class="form-input" 
                                    placeholder="–í–≤–µ–¥–∏—Ç–µ: –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω"
                                    required
                                >
                            </div>
                            
                            <div class="form-actions">
                                <button type="button" class="btn-secondary" onclick="window.roadToDreamApp.caravanModule.closeDeleteConfirmationModal()">
                                    –û—Ç–º–µ–Ω–∞
                                </button>
                                <button type="submit" class="btn-danger">
                                    –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        `;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –∫–∞—Ä–∞–≤–∞–Ω–∞
    setupCaravanEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
        const createCaravanBtn = document.getElementById('create-caravan-btn');
        console.log('–ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞:', createCaravanBtn);
        if (createCaravanBtn) {
            createCaravanBtn.addEventListener('click', () => {
                console.log('–ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞ –Ω–∞–∂–∞—Ç–∞!');
                this.showCreateCaravanModal();
            });
        } else {
            console.error('–ö–Ω–æ–ø–∫–∞ create-caravan-btn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ä–º —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
        const form1 = document.getElementById('create-caravan-step1-form');
        if (form1) {
            form1.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleStep1();
            });
        }
        
        const form2 = document.getElementById('create-caravan-step2-form');
        if (form2) {
            form2.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleStep2();
            });
        }
        
        const form3 = document.getElementById('create-caravan-step3-form');
        if (form3) {
            form3.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleStep3();
            });
        }
        
        const deleteForm = document.getElementById('delete-confirmation-form');
        if (deleteForm) {
            deleteForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleDeleteConfirmation();
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–µ–Ω—é –¥–ª—è –µ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.caravan-menu')) {
                this.closeAllMenus();
            }
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
    showCreateCaravanModal() {
        console.log('showCreateCaravanModal –≤—ã–∑–≤–∞–Ω–∞');
        this.initCaravanCreation();
        const modal = document.getElementById('create-caravan-modal');
        console.log('–ù–∞–π–¥–µ–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ:', modal);
        if (modal) {
            console.log('–£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å hidden');
            modal.classList.remove('hidden');
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            setTimeout(() => {
                const input = document.getElementById('caravan-name');
                if (input) {
                    input.focus();
                }
            }, 100);
        } else {
            console.error('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ create-caravan-modal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —à–∞–≥ 2
    showStep2() {
        const modal1 = document.getElementById('create-caravan-modal');
        const modal2 = document.getElementById('create-caravan-step2-modal');
        
        if (modal1) modal1.classList.add('hidden');
        if (modal2) {
            modal2.classList.remove('hidden');
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ü–µ–ª–∏
            setTimeout(() => {
                const input = document.getElementById('caravan-goal');
                if (input) {
                    input.focus();
                }
            }, 100);
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —à–∞–≥ 3
    showStep3() {
        const modal2 = document.getElementById('create-caravan-step2-modal');
        const modal3 = document.getElementById('create-caravan-step3-modal');
        
        if (modal2) modal2.classList.add('hidden');
        if (modal3) {
            modal3.classList.remove('hidden');
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è
            setTimeout(() => {
                const textarea = document.getElementById('caravan-description');
                if (textarea) {
                    textarea.focus();
                }
            }, 100);
        }
    }

    // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —à–∞–≥—É 1
    goToStep1() {
        const modal1 = document.getElementById('create-caravan-modal');
        const modal2 = document.getElementById('create-caravan-step2-modal');
        
        if (modal2) modal2.classList.add('hidden');
        if (modal1) {
            modal1.classList.remove('hidden');
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
            const nameInput = document.getElementById('caravan-name');
            if (nameInput && this.caravanCreationData) {
                nameInput.value = this.caravanCreationData.name;
                nameInput.focus();
            }
        }
    }

    // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —à–∞–≥—É 2
    goToStep2() {
        const modal2 = document.getElementById('create-caravan-step2-modal');
        const modal3 = document.getElementById('create-caravan-step3-modal');
        
        if (modal3) modal3.classList.add('hidden');
        if (modal2) {
            modal2.classList.remove('hidden');
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Ü–µ–ª—å
            const goalInput = document.getElementById('caravan-goal');
            if (goalInput && this.caravanCreationData) {
                goalInput.value = this.caravanCreationData.goal;
                goalInput.focus();
            }
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
    closeCreateCaravanModal() {
        const modals = [
            'create-caravan-modal',
            'create-caravan-step2-modal',
            'create-caravan-step3-modal'
        ];
        
        modals.forEach(modalId => {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.classList.add('hidden');
                // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
                const form = modal.querySelector('form');
                if (form) {
                    form.reset();
                }
            }
        });
        
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
        this.caravanCreationData = null;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
    initCaravanCreation() {
        this.caravanCreationData = {
            name: '',
            goal: '',
            description: ''
        };
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ 1: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    handleStep1() {
        const nameInput = document.getElementById('caravan-name');

        if (!nameInput) {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è');
            return;
        }

        const name = nameInput.value.trim();

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã');
            nameInput.focus();
            return;
        }

        if (name.length > 50) {
            alert('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤');
            nameInput.focus();
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        this.caravanCreationData.name = name;
        this.showStep2();
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ 2: –û–±—â–∞—è —Ü–µ–ª—å
    handleStep2() {
        const goalInput = document.getElementById('caravan-goal');

        if (!goalInput) {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ —Ü–µ–ª–∏');
            return;
        }

        const goal = goalInput.value.trim();

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!goal) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–±—â—É—é —Ü–µ–ª—å');
            goalInput.focus();
            return;
        }

        if (goal.length > 100) {
            alert('–û–±—â–∞—è —Ü–µ–ª—å –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100 —Å–∏–º–≤–æ–ª–æ–≤');
            goalInput.focus();
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        this.caravanCreationData.goal = goal;
        this.showStep3();
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞–≥–∞ 3: –û–ø–∏—Å–∞–Ω–∏–µ
    handleStep3() {
        const descriptionTextarea = document.getElementById('caravan-description');

        if (!descriptionTextarea) {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è');
            return;
        }

        const description = descriptionTextarea.value.trim();

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (description.length > 200) {
            alert('–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 200 —Å–∏–º–≤–æ–ª–æ–≤');
            descriptionTextarea.focus();
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
        this.caravanCreationData.description = description;
        this.showManageMembersForNewCaravan();
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–∞—Ä–∞–≤–∞–Ω–∞
    showManageMembersForNewCaravan() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —à–∞–≥ 3
        const modal3 = document.getElementById('create-caravan-step3-modal');
        if (modal3) modal3.classList.add('hidden');
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ä–∞–≤–∞–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
        const tempCaravan = {
            id: 'temp-new-caravan',
            name: this.caravanCreationData.name,
            goal: this.caravanCreationData.goal,
            description: this.caravanCreationData.description,
            members: 1,
            status: 'active'
        };
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
        this.showManageMembersModal(tempCaravan);
    }

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω—ã –∏–∑ localStorage
    loadCaravans() {
        try {
            const saved = localStorage.getItem('roadToDreamCaravans');
            return saved ? JSON.parse(saved) : [];
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤:', error);
            return [];
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω—ã –≤ localStorage
    saveCaravans() {
        try {
            localStorage.setItem('roadToDreamCaravans', JSON.stringify(this.caravans));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–æ–≤:', error);
        }
    }

    // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–∞—Ä–∞–≤–∞–Ω
    addCaravan(caravanData) {
        const newCaravan = {
            id: Date.now().toString(),
            name: caravanData.name,
            goal: caravanData.goal,
            description: caravanData.description,
            createdAt: new Date().toISOString(),
            members: 1, // –ü–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
            status: 'active'
        };
        
        this.caravans.unshift(newCaravan); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
        this.saveCaravans();
        return newCaravan;
    }

    // –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
    getGoalName(goalValue) {
        const goals = {
            'fitness': 'üí™ –§–∏—Ç–Ω–µ—Å –∏ –∑–¥–æ—Ä–æ–≤—å–µ',
            'career': 'üöÄ –ö–∞—Ä—å–µ—Ä–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ',
            'education': 'üìö –û–±—É—á–µ–Ω–∏–µ –∏ –Ω–∞–≤—ã–∫–∏',
            'travel': '‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
            'business': 'üíº –ë–∏–∑–Ω–µ—Å –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ',
            'creativity': 'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ',
            'family': 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º—å—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è',
            'finance': 'üí∞ –§–∏–Ω–∞–Ω—Å—ã –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
            'spirituality': 'üßò –î—É—Ö–æ–≤–Ω–æ—Å—Ç—å –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
            'other': 'üåü –î—Ä—É–≥–æ–µ'
        };
        // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ –≥–æ—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        if (goalValue && Object.values(goals).includes(goalValue)) {
            return goalValue;
        }
        // –ï—Å–ª–∏ —ç—Ç–æ –∫–ª—é—á, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        return goals[goalValue] || goalValue || 'üåü –î—Ä—É–≥–æ–µ';
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤
    renderCaravansList() {
        if (!this.caravans || this.caravans.length === 0) {
            return `
                <div class="empty-caravans">
                    <div class="empty-icon">üì≠</div>
                    <p class="empty-text">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞—Ä–∞–≤–∞–Ω–æ–≤</p>
                    <p class="empty-hint">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∫–∞—Ä–∞–≤–∞–Ω, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!</p>
                </div>
            `;
        }

        return this.caravans.map(caravan => `
            <div class="caravan-card" data-caravan-id="${caravan.id}">
                <div class="caravan-card-header">
                    <div class="caravan-name">${caravan.name}</div>
                    <div class="caravan-header-right">
                        <div class="caravan-status ${caravan.status}">${caravan.status === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</div>
                        <div class="caravan-menu">
                            <button class="caravan-menu-trigger" onclick="window.roadToDreamApp.caravanModule.toggleCaravanMenu('${caravan.id}')" aria-label="–ú–µ–Ω—é –∫–∞—Ä–∞–≤–∞–Ω–∞">
                                <svg class="menu-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="12" cy="12" r="1"></circle>
                                    <circle cx="12" cy="5" r="1"></circle>
                                    <circle cx="12" cy="19" r="1"></circle>
                                </svg>
                            </button>
                            <div class="caravan-dropdown-menu" id="menu-${caravan.id}" style="display: none;">
                                <button class="menu-item" onclick="window.roadToDreamApp.caravanModule.editCaravanDescription('${caravan.id}')">
                                    <span class="menu-icon">‚úèÔ∏è</span>
                                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
                                </button>
                                <button class="menu-item" onclick="window.roadToDreamApp.caravanModule.manageMembers('${caravan.id}')">
                                    <span class="menu-icon">üë•</span>
                                    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
                                </button>
                                <button class="menu-item" onclick="window.roadToDreamApp.caravanModule.shareCaravan('${caravan.id}')">
                                    <span class="menu-icon">üîó</span>
                                    –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
                                </button>
                                <hr class="menu-divider">
                                <button class="menu-item danger" onclick="window.roadToDreamApp.caravanModule.deleteCaravan('${caravan.id}')">
                                    <span class="menu-icon">üóëÔ∏è</span>
                                    –£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="caravan-goal">${this.getGoalName(caravan.goal)}</div>
                ${caravan.description ? `<div class="caravan-description">${caravan.description}</div>` : ''}
                <div class="caravan-meta">
                    <div class="caravan-members">üë• ${caravan.members} —É—á–∞—Å—Ç–Ω–∏–∫${caravan.members === 1 ? '' : caravan.members < 5 ? '–∞' : '–æ–≤'}</div>
                    <div class="caravan-date">${this.formatDate(caravan.createdAt)}</div>
                </div>
                <div class="caravan-actions">
                    <button class="btn-caravan-action" onclick="window.roadToDreamApp.caravanModule.viewCaravan('${caravan.id}')">
                        –û—Ç–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        `).join('');
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    formatDate(dateString) {
        const date = new Date(dateString);
        const now = new Date();
        const diffTime = Math.abs(now - date);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        
        if (diffDays === 1) {
            return '–°–µ–≥–æ–¥–Ω—è';
        } else if (diffDays === 2) {
            return '–í—á–µ—Ä–∞';
        } else if (diffDays <= 7) {
            return `${diffDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
        } else {
            return date.toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'short'
            });
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: ${type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#6366f1'};
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            z-index: 10000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            animation: slideDown 0.3s ease;
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideDown {
                from {
                    opacity: 0;
                    transform: translateX(-50%) translateY(-20px);
                }
                to {
                    opacity: 1;
                    transform: translateX(-50%) translateY(0);
                }
            }
        `;
        document.head.appendChild(style);

        // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        document.body.appendChild(notification);

        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.animation = 'slideUp 0.3s ease';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
                if (style.parentNode) {
                    style.parentNode.removeChild(style);
                }
            }, 300);
        }, 3000);

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
        const fadeOutStyle = document.createElement('style');
        fadeOutStyle.textContent = `
            @keyframes slideUp {
                from {
                    opacity: 1;
                    transform: translateX(-50%) translateY(0);
                }
                to {
                    opacity: 0;
                    transform: translateX(-50%) translateY(-20px);
                }
            }
        `;
        document.head.appendChild(fadeOutStyle);
    }

    // –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä–∞–≤–∞–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    viewCaravan(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (caravan) {
            alert(`–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä–∞–≤–∞–Ω–∞ "${caravan.name}"\n\n–¶–µ–ª—å: ${this.getGoalName(caravan.goal)}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${caravan.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n\n–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ!`);
        }
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é –∫–∞—Ä–∞–≤–∞–Ω–∞
    toggleCaravanMenu(caravanId) {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–µ–Ω—é
        document.querySelectorAll('.caravan-dropdown-menu').forEach(menu => {
            if (menu.id !== `menu-${caravanId}`) {
                menu.style.display = 'none';
            }
        });

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é
        const menu = document.getElementById(`menu-${caravanId}`);
        if (menu) {
            const isHidden = menu.style.display === 'none' || menu.style.display === '';
            
            if (isHidden) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
                menu.style.display = 'block';
                
                // –ü—Ä–æ—Å—Ç–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π
                menu.style.top = '100%';
                menu.style.bottom = 'auto';
            } else {
                menu.style.display = 'none';
            }
        }
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞
    editCaravanDescription(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (!caravan) return;

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
        this.closeAllMenus();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.showEditDescriptionModal(caravan);
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
    manageMembers(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (!caravan) return;

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
        this.closeAllMenus();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
        this.showManageMembersModal(caravan);
    }

    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞—Ä–∞–≤–∞–Ω
    shareCaravan(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (!caravan) return;

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
        this.closeAllMenus();

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É (–ø–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∞)
        const shareUrl = `${window.location.origin}${window.location.pathname}?caravan=${caravanId}`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Å—Å—ã–ª–∫–æ–π
        this.showShareModal(caravan, shareUrl);
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞
    deleteCaravan(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (!caravan) return;

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
        this.closeAllMenus();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        this.showDeleteConfirmationModal(caravan);
    }

    // –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–µ–Ω—é
    closeAllMenus() {
        document.querySelectorAll('.caravan-dropdown-menu').forEach(menu => {
            menu.style.display = 'none';
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    showDeleteConfirmationModal(caravan) {
        this.caravanToDelete = caravan;
        const modal = document.getElementById('delete-confirmation-modal');
        const caravanNameElement = document.getElementById('delete-caravan-name');
        
        if (modal && caravanNameElement) {
            caravanNameElement.textContent = `"${caravan.name}"`;
            modal.classList.remove('hidden');
            
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
            setTimeout(() => {
                const input = document.getElementById('delete-confirmation-input');
                if (input) {
                    input.focus();
                }
            }, 100);
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    closeDeleteConfirmationModal() {
        const modal = document.getElementById('delete-confirmation-modal');
        if (modal) {
            modal.classList.add('hidden');
            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
            const form = document.getElementById('delete-confirmation-form');
            if (form) {
                form.reset();
            }
        }
        this.caravanToDelete = null;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    handleDeleteConfirmation() {
        const input = document.getElementById('delete-confirmation-input');
        if (!input || !this.caravanToDelete) {
            return;
        }

        const confirmationText = input.value.trim();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑—ã
        if (confirmationText !== '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω') {
            alert('–ù–µ–≤–µ—Ä–Ω–∞—è —Ñ—Ä–∞–∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ: "–£–¥–∞–ª–∏—Ç—å –∫–∞—Ä–∞–≤–∞–Ω"');
            input.focus();
            return;
        }

        // –£–¥–∞–ª—è–µ–º –∫–∞—Ä–∞–≤–∞–Ω
        this.caravans = this.caravans.filter(c => c.id !== this.caravanToDelete.id);
        this.saveCaravans();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.closeDeleteConfirmationModal();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.renderCaravanScreen();
        this.showNotification('–ö–∞—Ä–∞–≤–∞–Ω —É–¥–∞–ª–µ–Ω', 'success');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
    showEditDescriptionModal(caravan) {
        this.currentEditingCaravan = caravan;
        const modal = document.getElementById('edit-description-modal');
        const textarea = document.getElementById('edit-description-text');
        
        if (modal && textarea) {
            textarea.value = caravan.description || '';
            modal.classList.remove('hidden');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
            const form = document.getElementById('edit-description-form');
            if (form) {
                form.onsubmit = (e) => {
                    e.preventDefault();
                    this.saveCaravanDescription(textarea.value.trim());
                };
            }
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
    closeEditDescriptionModal() {
        const modal = document.getElementById('edit-description-modal');
        if (modal) {
            modal.classList.add('hidden');
            this.currentEditingCaravan = null;
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞
    saveCaravanDescription(newDescription) {
        if (this.currentEditingCaravan) {
            this.currentEditingCaravan.description = newDescription;
            this.saveCaravans();
            this.closeEditDescriptionModal();
            this.renderCaravanScreen();
            this.showNotification('–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ', 'success');
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
    showManageMembersModal(caravan) {
        this.currentManagingCaravan = caravan;
        const modal = document.getElementById('manage-members-modal');
        
        if (modal) {
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            this.renderMembersList(caravan);
            modal.classList.remove('hidden');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –∫–∞—Ä–∞–≤–∞–Ω" —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–∞—Ä–∞–≤–∞–Ω–∞
            const finishBtn = document.getElementById('finish-caravan-btn');
            if (finishBtn) {
                if (caravan.id === 'temp-new-caravan') {
                    finishBtn.style.display = 'inline-block';
                } else {
                    finishBtn.style.display = 'none';
                }
            }
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
    closeManageMembersModal() {
        const modal = document.getElementById('manage-members-modal');
        if (modal) {
            modal.classList.add('hidden');
            this.currentManagingCaravan = null;
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    renderMembersList(caravan) {
        const membersList = document.getElementById('members-list');
        if (!membersList) return;

        // –ü–æ–∫–∞ —á—Ç–æ —É –Ω–∞—Å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å, –Ω–æ –≤ –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        const members = [
            { id: 'creator', name: '–í—ã (—Å–æ–∑–¥–∞—Ç–µ–ª—å)', role: 'creator', canRemove: false }
        ];

        membersList.innerHTML = members.map(member => `
            <div class="member-item">
                <div class="member-info">
                    <div class="member-name">${member.name}</div>
                    <div class="member-role">${member.role === 'creator' ? '–°–æ–∑–¥–∞—Ç–µ–ª—å' : '–£—á–∞—Å—Ç–Ω–∏–∫'}</div>
                </div>
                ${member.canRemove ? `
                    <button class="btn-remove-member" onclick="window.roadToDreamApp.caravanModule.removeMember('${member.id}')">
                        –£–¥–∞–ª–∏—Ç—å
                    </button>
                ` : ''}
            </div>
        `).join('');
    }

    // –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    addMember() {
        const usernameInput = document.getElementById('member-username');
        const username = usernameInput?.value.trim();
        
        if (!username) {
            alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID');
            return;
        }

        // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        alert(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ "${username}"\n\n–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ!`);
        usernameInput.value = '';
    }

    // –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞
    finishCaravanCreation() {
        if (!this.caravanCreationData) {
            console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä–∞–≤–∞–Ω–∞');
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        const caravanName = this.caravanCreationData.name;
        
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä–∞–≤–∞–Ω
        const newCaravan = this.addCaravan(this.caravanCreationData);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        this.closeManageMembersModal();
        this.closeCreateCaravanModal();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        this.showNotification('–ö–∞—Ä–∞–≤–∞–Ω "' + caravanName + '" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!', 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –∫–∞—Ä–∞–≤–∞–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞—Ä–∞–≤–∞–Ω–∞
        setTimeout(() => {
            this.renderCaravanScreen();
        }, 1000);
    }

    // –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    removeMember(memberId) {
        alert(`–£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞\n\n–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ!`);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
    showShareModal(caravan, shareUrl) {
        this.currentSharingCaravan = caravan;
        this.currentShareUrl = shareUrl;
        
        const modal = document.getElementById('share-modal');
        const nameElement = document.getElementById('share-caravan-name');
        const linkInput = document.getElementById('share-link-input');
        
        if (modal && nameElement && linkInput) {
            nameElement.textContent = caravan.name;
            linkInput.value = shareUrl;
            modal.classList.remove('hidden');
        }
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π
    closeShareModal() {
        const modal = document.getElementById('share-modal');
        if (modal) {
            modal.classList.add('hidden');
            this.currentSharingCaravan = null;
            this.currentShareUrl = null;
        }
    }

    // –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
    copyShareLink() {
        const linkInput = document.getElementById('share-link-input');
        if (linkInput && this.currentShareUrl) {
            linkInput.select();
            linkInput.setSelectionRange(0, 99999); // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
            
            try {
                document.execCommand('copy');
                this.showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
            } catch (err) {
                // Fallback –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
                navigator.clipboard.writeText(this.currentShareUrl).then(() => {
                    this.showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!', 'success');
                }).catch(() => {
                    this.showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', 'error');
                });
            }
        }
    }

    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram (–∑–∞–≥–ª—É—à–∫–∞)
    shareToTelegram() {
        if (this.currentShareUrl) {
            const telegramUrl = `https://t.me/share/url?url=${encodeURIComponent(this.currentShareUrl)}&text=${encodeURIComponent(`–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∫–∞—Ä–∞–≤–∞–Ω—É "${this.currentSharingCaravan.name}"!`)}`;
            window.open(telegramUrl, '_blank');
        }
    }

    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ (–∑–∞–≥–ª—É—à–∫–∞)
    shareToOther() {
        if (navigator.share && this.currentShareUrl) {
            navigator.share({
                title: `–ö–∞—Ä–∞–≤–∞–Ω "${this.currentSharingCaravan.name}"`,
                text: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –º–æ–µ–º—É –∫–∞—Ä–∞–≤–∞–Ω—É!',
                url: this.currentShareUrl
            }).catch(() => {
                this.copyShareLink();
            });
        } else {
            this.copyShareLink();
        }
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞)
    editCaravan(caravanId) {
        const caravan = this.caravans.find(c => c.id === caravanId);
        if (caravan) {
            alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä–∞–≤–∞–Ω–∞ "${caravan.name}"\n\n–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø–æ–∑–∂–µ!`);
        }
    }
}
