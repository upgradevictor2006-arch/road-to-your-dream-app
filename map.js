// ============================================
//   –ú–û–î–£–õ–¨ –ö–ê–†–¢–´ –ú–ï–ß–¢–´ - –û–¢–î–ï–õ–¨–ù–´–ô –§–ê–ô–õ
//   –û—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
// ============================================

class MapModule {
    constructor(app) {
        this.app = app;
        console.log('üó∫Ô∏è MapModule –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —ç–∫—Ä–∞–Ω–∞ –∫–∞—Ä—Ç—ã
    renderMapScreen() {
        const appContainer = document.getElementById('app-container');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞
        if (this.app.currentMap) {
            this.renderMapWithStepsStrip();
        } else {
            this.renderEmptyMapScreen();
        }
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—É—Å—Ç–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –∫–∞—Ä—Ç—ã
    renderEmptyMapScreen() {
        const appContainer = document.getElementById('app-container');
        appContainer.innerHTML = `
            <div class="empty-map-screen">
                <!-- –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞ -->
                <div class="motivational-quote">
                    <div class="quote-text">–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ —Ç—ã—Å—è—á—É –º–∏–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞.</div>
                    <div class="quote-author">‚Äî –õ–∞–æ-—Ü–∑—ã</div>
                </div>
                
                <!-- –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é -->
                <div class="call-to-action">
                    <div class="cta-question">–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –ø—É—Ç—å –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ?</div>
                    <button class="create-map-button" id="create-map-btn">
                        <span class="plus-icon">+</span>
                        –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
                    </button>
                    <div class="cta-description">–û–ø—Ä–µ–¥–µ–ª–∏ —Å–≤–æ—é —Ü–µ–ª—å, —Ä–∞–∑–±–µ–π –µ—ë –Ω–∞ —à–∞–≥–∏ –∏ –Ω–∞—á–Ω–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥</div>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏
        const createButton = document.getElementById('create-map-btn');
        if (createButton) {
            createButton.addEventListener('click', () => {
                this.handleCreateMap();
            });
        }
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç—ã —Å –ª–µ–Ω—Ç–æ–π —à–∞–≥–æ–≤
    renderMapWithStepsStrip() {
        console.log('üéØ –§–£–ù–ö–¶–ò–Ø renderMapWithStepsStrip –í–´–ó–í–ê–ù–ê!');
        const appContainer = document.getElementById('app-container');
        const progress = Math.round((this.app.currentMap.currentStep / this.app.currentMap.totalSteps) * 100);
        const isCompleted = this.app.currentMap.currentStep >= this.app.currentMap.totalSteps;
        const currentStepData = this.app.currentMap.steps[this.app.currentMap.currentStep];
        
        console.log('–†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç—É:', {
            currentStep: this.app.currentMap.currentStep,
            totalSteps: this.app.currentMap.totalSteps,
            isCompleted: isCompleted,
            progress: progress
        });
        
        appContainer.innerHTML = `
            <div class="map-screen">
                <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç—ã -->
                <div class="map-header">
                    <h2 class="map-title clickable" id="map-title">${this.app.currentMap.goal}</h2>
                    <div class="map-progress">
                        <div class="progress-text">–ü—Ä–æ–≥—Ä–µ—Å—Å: ${this.app.currentMap.currentStep}/${this.app.currentMap.totalSteps} –¥–Ω–µ–π (${progress}%)</div>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${progress}%"></div>
                        </div>
                    </div>
                </div>
                
                <!-- –û–±–ª–∞—Å—Ç—å –∫–∞—Ä—Ç—ã —Å –ª–µ–Ω—Ç–æ–π —à–∞–≥–æ–≤ -->
                <div class="map-container">
                    <div class="steps-strip" id="steps-strip">
                        ${this.renderStepsStrip()}
                    </div>
                </div>
                
                <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
                <div class="map-actions">
                    ${isCompleted ? `
                    <div class="completion-message">
                        <div class="celebration-icon">üéâ</div>
                        <div class="completion-text">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!</div>
                    </div>
                    ` : ''}
                    <button class="reset-map-button" id="reset-map-btn">
                        –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
                    </button>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —à–∞–≥–æ–≤
        const inlineButtons = document.querySelectorAll('.confirm-step-btn-inline');
        console.log('–ù–∞–π–¥–µ–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫:', inlineButtons.length);
        inlineButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.stopPropagation();
                this.showStepConfirmationModal();
            });
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞ –∫–∞—Ä—Ç—ã
        const resetButton = document.getElementById('reset-map-btn');
        if (resetButton) {
            resetButton.addEventListener('click', () => {
                this.handleCreateMap();
            });
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–∞—Ä—Ç—ã
        const mapTitle = document.getElementById('map-title');
        if (mapTitle) {
            mapTitle.addEventListener('click', () => {
                this.showMapSelectionModal();
            });
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ª–µ–Ω—Ç—ã —à–∞–≥–æ–≤
    renderStepsStrip() {
        console.log('üéØ –†–µ–Ω–¥–µ—Ä–∏–º –ª–µ–Ω—Ç—É —à–∞–≥–æ–≤...');
        if (!this.app.currentMap || !this.app.currentMap.steps) {
            return '';
        }
        
        const steps = this.app.currentMap.steps;
        const currentStepIndex = this.app.currentMap.currentStep;
        
        console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –ª–µ–Ω—Ç—ã:', {
            totalSteps: steps.length,
            currentStepIndex: currentStepIndex,
            steps: steps
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ (—É–±–∏—Ä–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ)
        const visibleSteps = steps.slice(currentStepIndex);
        const maxVisible = 5; // –ú–∞–∫—Å–∏–º—É–º 5 —à–∞–≥–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        const stepsToShow = visibleSteps.slice(0, maxVisible);
        
        return stepsToShow.map((step, index) => {
            const stepNumber = currentStepIndex + index + 1;
            const isCurrentStep = index === 0;
            const isCompleted = stepNumber <= currentStepIndex;
            
            if (isCompleted) {
                return ''; // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —à–∞–≥–∏
            }
            
            return `
                <div class="step-container">
                    <div class="step-square ${isCurrentStep ? 'current' : ''} ${isCompleted ? 'completed' : ''}" data-step="${stepNumber}">
                        <span class="step-number">${stepNumber}</span>
                    </div>
                    ${isCurrentStep ? `
                        <div class="current-step-details">
                            <h3>–®–∞–≥ ${stepNumber}</h3>
                            <div class="step-info">
                                <span class="step-number-large">${stepNumber}</span>
                                <div class="step-description">${step.task}</div>
                            </div>
                            <button class="confirm-step-btn-inline">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</button>
                        </div>
                    ` : ''}
                </div>
            `;
        }).join('');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —à–∞–≥–∞
    showStepConfirmationModal() {
        console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —à–∞–≥–∞...');
        
        if (!this.app.currentMap || this.app.currentMap.currentStep >= this.app.currentMap.totalSteps) {
            console.log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —à–∞–≥–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
            return;
        }
        
        const currentStepIndex = this.app.currentMap.currentStep;
        const currentStep = this.app.currentMap.steps[currentStepIndex];
        
        const modalHTML = `
            <div class="modal-overlay active" id="step-confirmation-modal">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h2>
                        <p class="modal-subtitle">–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ—Ç —à–∞–≥?</p>
                    </div>
                    <div class="modal-body">
                        <div class="step-confirmation-info">
                            <div class="step-confirmation-number">${currentStepIndex + 1}</div>
                            <div class="step-confirmation-task">${currentStep.task}</div>
                        </div>
                        <div class="confirmation-warning">
                            <div class="warning-icon">‚ö†Ô∏è</div>
                            <div class="warning-text">
                                –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —ç—Ç–æ—Ç —à–∞–≥ –±—É–¥–µ—Ç –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –∏ –≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É.
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" id="step-confirmation-cancel">–û—Ç–º–µ–Ω–∞</button>
                        <button class="btn btn-primary" id="step-confirmation-confirm">–î–∞, –≤—ã–ø–æ–ª–Ω–∏–ª!</button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const modal = document.getElementById('step-confirmation-modal');
        const cancelBtn = document.getElementById('step-confirmation-cancel');
        const confirmBtn = document.getElementById('step-confirmation-confirm');
        
        const closeModal = () => {
            modal.remove();
        };
        
        cancelBtn.addEventListener('click', closeModal);
        confirmBtn.addEventListener('click', () => {
            this.completeCurrentStep();
            closeModal();
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });
    }

    // –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π —à–∞–≥
    completeCurrentStep() {
        console.log('üéØ –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥...');
        
        if (!this.app.currentMap || this.app.currentMap.currentStep >= this.app.currentMap.totalSteps) {
            console.log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —à–∞–≥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è');
            return;
        }
        
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        this.app.currentMap.currentStep++;
        
        console.log('–¢–µ–∫—É—â–∏–π —à–∞–≥ –æ–±–Ω–æ–≤–ª–µ–Ω:', this.app.currentMap.currentStep);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        this.app.saveMapsToStorage();
        
        // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É
        this.renderMapScreen();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        if (this.app.currentMap.currentStep >= this.app.currentMap.totalSteps) {
            this.showCompletionMessage();
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    showCompletionMessage() {
        console.log('üéâ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ü–µ–ª–∏!');
        
        const modalHTML = `
            <div class="modal-overlay active" id="completion-modal">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
                        <p class="modal-subtitle">–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∏–≥–ª–∏ —Å–≤–æ–µ–π —Ü–µ–ª–∏!</p>
                    </div>
                    <div class="modal-body">
                        <div class="completion-message">
                            <div class="celebration-icon">üèÜ</div>
                            <div class="completion-text">
                                –í—ã –ø—Ä–æ—à–ª–∏ –≤–µ—Å—å –ø—É—Ç—å –æ—Ç –Ω–∞—á–∞–ª–∞ –¥–æ –∫–æ–Ω—Ü–∞! 
                                –í–∞—à–∞ —Ü–µ–ª—å "${this.app.currentMap.goal}" —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞.
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" id="completion-ok">–û—Ç–ª–∏—á–Ω–æ!</button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        const modal = document.getElementById('completion-modal');
        const okBtn = document.getElementById('completion-ok');
        
        const closeModal = () => {
            modal.remove();
        };
        
        okBtn.addEventListener('click', closeModal);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
    handleCreateMap() {
        console.log('üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã
        this.app.showMapSelectionModal();
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã
    showMapSelectionModal() {
        console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç—ã...');
        
        if (this.app.maps.length <= 1) {
            // –ï—Å–ª–∏ –∫–∞—Ä—Ç –º–∞–ª–æ, —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
            this.app.addNewMap();
            return;
        }
        
        const modalHTML = `
            <div class="modal-overlay" id="map-selection-modal">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç—É</h2>
                        <p class="modal-subtitle">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é</p>
                    </div>
                    <div class="modal-body">
                        <div class="maps-list">
                            ${this.app.maps.map(map => `
                                <div class="map-item ${map.id === this.app.currentMapId ? 'active' : ''}">
                                    <div class="map-item-header">
                                        <div class="map-item-title">${map.goal}</div>
                                        <div class="map-item-progress">${map.currentStep}/${map.totalSteps} —à–∞–≥–æ–≤</div>
                                    </div>
                                    <div class="map-item-description">${map.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}</div>
                                    <div class="map-item-actions">
                                        <button class="select-map-btn" data-map-id="${map.id}">
                                            ${map.id === this.app.currentMapId ? 'continue' : '–í—ã–±—Ä–∞—Ç—å'}
                                        </button>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" id="map-selection-cancel">–û—Ç–º–µ–Ω–∞</button>
                        <button class="btn btn-primary" id="add-new-map-btn">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É</button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHTML);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            const modal = document.getElementById('map-selection-modal');
            if (modal) {
                modal.classList.add('active');
            }
        }, 10);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const modal = document.getElementById('map-selection-modal');
        const cancelBtn = document.getElementById('map-selection-cancel');
        const addNewBtn = document.getElementById('add-new-map-btn');
        const selectBtns = document.querySelectorAll('.select-map-btn');
        
        const closeModal = () => {
            modal.remove();
        };
        
        cancelBtn.addEventListener('click', closeModal);
        addNewBtn.addEventListener('click', () => {
            closeModal();
            this.app.addNewMap();
        });
        
        selectBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const mapId = btn.getAttribute('data-map-id');
                this.app.switchToMap(mapId);
                closeModal();
            });
        });
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã
    createMap() {
        console.log('üéØ –§–£–ù–ö–¶–ò–Ø createMap –í–´–ó–í–ê–ù–ê!');
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É —Å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏
        const newMap = {
            id: Date.now().toString(),
            goal: '–ò–∑—É—á–∏—Ç—å –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫',
            description: '–û—Å–≤–æ–∏—Ç—å –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
            totalSteps: 7,
            currentStep: 0,
            steps: [
                { task: '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞' },
                { task: '–ü–æ–ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏' },
                { task: '–ò–∑—É—á–∏—Ç—å —É—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã' },
                { task: '–û—Å–≤–æ–∏—Ç—å —Ü–∏–∫–ª—ã' },
                { task: '–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏' },
                { task: '–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç' },
                { task: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å' }
            ],
            createdAt: new Date().toISOString()
        };
        
        this.app.currentMap = newMap;
        this.app.currentMapId = newMap.id;
        this.app.maps.push(newMap);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        this.app.saveMapsToStorage();
        
        // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º —ç–∫—Ä–∞–Ω
        this.renderMapScreen();
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç—ã
    addNewMap() {
        console.log('üéØ –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã
        this.app.showCreateMapModal();
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç—É
    switchToMap(mapId) {
        console.log('üéØ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∫–∞—Ä—Ç—É:', mapId);
        
        const map = this.app.maps.find(m => m.id === mapId);
        if (map) {
            this.app.currentMap = map;
            this.app.currentMapId = mapId;
            this.app.saveMapsToStorage();
            this.renderMapScreen();
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
if (typeof module !== 'undefined' && module.exports) {
    module.exports = MapModule;
} else if (typeof window !== 'undefined') {
    window.MapModule = MapModule;
}
